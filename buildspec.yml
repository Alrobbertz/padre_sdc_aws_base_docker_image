version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w5r9l1c8
      
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t swsoc-docker-lambda-base:latest .
      - docker tag swsoc-docker-lambda-base:latest public.ecr.aws/w5r9l1c8/swsoc-docker-lambda-base:latest
      - curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
      
      - echo CST Testing
      - container-structure-test test --image swsoc-docker-lambda-base:latest --config cst_config.yaml
      
      - echo Pushing the Docker image...
      - docker push public.ecr.aws/w5r9l1c8/swsoc-docker-lambda-base:latest
      
      - |
      
        echo "Docker Git Release Tag Script"

        TRIGGER=$CODEBUILD_WEBHOOK_TRIGGER

        if [[ $TRIGGER == *"branch/main"* ]];then
          echo "Building using branch/main source, not tagging"
        fi    

        if [[ $TRIGGER == *"tag/"* ]];then
          TAG=${TRIGGER:4}
          echo "Building using tag release, tagging image with $TAG"
          docker tag swsoc-docker-lambda-base:latest public.ecr.aws/w5r9l1c8/swsoc-docker-lambda-base:$(printenv TAG)
          docker push public.ecr.aws/w5r9l1c8/swsoc-docker-lambda-base:$(printenv TAG)
        fi
        
      - echo Build completed on `date`
      
      - echo Starting Processing Function Codebuild Projects
      - aws codebuild start-build --project-name build_sdc_aws_processing_lambda --region us-east-2

